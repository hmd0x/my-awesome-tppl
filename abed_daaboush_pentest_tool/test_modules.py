#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ููู ุงุฎุชุจุงุฑ ูููุญุฏุงุช ุงูุฃุณุงุณูุฉ
ุงููุทูุฑ: ุนุงุจุฏ ุฏุนุจูุด
"""

import sys
import os

# ุฅุถุงูุฉ ูุณุงุฑ ุงููุดุฑูุน ุฅูู sys.path
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_root)

def test_imports():
    """ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุฌููุน ุงููุญุฏุงุช"""
    print("๐ ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุงููุญุฏุงุช...")
    
    try:
        from config import DEVELOPER_NAME, TOOL_NAME, VERSION
        print(f"โ ุชู ุงุณุชูุฑุงุฏ config ุจูุฌุงุญ - {TOOL_NAME} v{VERSION} ุจูุงุณุทุฉ {DEVELOPER_NAME}")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ config: {e}")
        return False
    
    try:
        from utils.utils import run_command, log_message
        print("โ ุชู ุงุณุชูุฑุงุฏ utils ุจูุฌุงุญ")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ utils: {e}")
        return False
    
    try:
        from core.core import scan_sql_injection, scan_network, scan_web
        print("โ ุชู ุงุณุชูุฑุงุฏ core ุจูุฌุงุญ")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ core: {e}")
        return False
    
    try:
        from report.report import PentestReportGenerator
        print("โ ุชู ุงุณุชูุฑุงุฏ report ุจูุฌุงุญ")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ report: {e}")
        return False
    
    try:
        from ai_analyzer.ai_analyzer import AIVulnerabilityAnalyzer
        print("โ ุชู ุงุณุชูุฑุงุฏ ai_analyzer ุจูุฌุงุญ")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ ai_analyzer: {e}")
        return False
    
    return True

def test_basic_functionality():
    """ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ"""
    print("\n๐งช ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ...")
    
    try:
        from utils.utils import run_command
        # ุงุฎุชุจุงุฑ ุฃูุฑ ุจุณูุท
        result = run_command(["echo", "ุงุฎุชุจุงุฑ ุงูุฃุฏุงุฉ"])
        if "ุงุฎุชุจุงุฑ ุงูุฃุฏุงุฉ" in result:
            print("โ ุงุฎุชุจุงุฑ run_command ูุฌุญ")
        else:
            print("โ ุงุฎุชุจุงุฑ run_command ูุดู")
            return False
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ run_command: {e}")
        return False
    
    try:
        from report.report import PentestReportGenerator
        generator = PentestReportGenerator()
        print("โ ุงุฎุชุจุงุฑ ุฅูุดุงุก ูููุฏ ุงูุชูุงุฑูุฑ ูุฌุญ")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ูููุฏ ุงูุชูุงุฑูุฑ: {e}")
        return False
    
    return True

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ููุงุฎุชุจุงุฑ"""
    print("=" * 50)
    print("๐ ุจุฏุก ุงุฎุชุจุงุฑ ุฃุฏุงุฉ ุงุฎุชุจุงุฑ ุงูุงุฎุชุฑุงู")
    print("=" * 50)
    
    # ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏ
    if not test_imports():
        print("\nโ ูุดู ูู ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏ")
        return False
    
    # ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ
    if not test_basic_functionality():
        print("\nโ ูุดู ูู ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ")
        return False
    
    print("\n" + "=" * 50)
    print("๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช! ุงูุฃุฏุงุฉ ุฌุงูุฒุฉ ููุงุณุชุฎุฏุงู")
    print("=" * 50)
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
