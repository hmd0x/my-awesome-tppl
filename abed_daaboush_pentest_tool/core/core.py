
# core.py
# هذا الملف يحتوي على الوظائف الأساسية لاختبار الاختراق.

from utils.utils import run_command, log_message
from config import SQLMAP_PATH, NMAP_PATH, NIKTO_PATH, HYDRA_PATH

def scan_sql_injection(target_url):
    """
    يقوم بفحص ثغرات SQL Injection باستخدام sqlmap.
    """
    log_message(f"بدء فحص SQL Injection على: {target_url}")
    command = [SQLMAP_PATH, "-u", target_url, "--batch", "--risk=3", "--level=3"]
    result = run_command(command)
    log_message(f"نتائج فحص SQL Injection:\n{result}")
    return result

def scan_network(target_ip_range):
    """
    يقوم بفحص الشبكة باستخدام nmap.
    """
    log_message(f"بدء فحص الشبكة على: {target_ip_range}")
    command = [NMAP_PATH, "-sV", target_ip_range]
    result = run_command(command)
    log_message(f"نتائج فحص الشبكة:\n{result}")
    return result

def scan_web(target_url):
    """
    يقوم بفحص الويب باستخدام nikto.
    """
    log_message(f"بدء فحص الويب على: {target_url}")
    command = [NIKTO_PATH, "-h", target_url]
    result = run_command(command)
    log_message(f"نتائج فحص الويب:\n{result}")
    return result

def gather_dns_info(domain):
    """
    يقوم بجمع معلومات DNS للنطاق المحدد.
    """
    log_message(f"بدء جمع معلومات DNS للنطاق: {domain}")
    # استخدام dig لجمع معلومات DNS
    command = ["dig", domain, "ANY"]
    result = run_command(command)
    log_message(f"نتائج جمع معلومات DNS:\n{result}")
    return result

def gather_ip_info(ip_address):
    """
    يقوم بجمع معلومات IP للعنوان المحدد.
    """
    log_message(f"بدء جمع معلومات IP للعنوان: {ip_address}")
    # يمكن استخدام nmap لجمع معلومات عن IP، أو أداة مثل whois إذا كانت متوفرة
    # هنا سنستخدم nmap كبديل بسيط لجمع معلومات عامة عن المضيف
    command = [NMAP_PATH, "-sP", ip_address] # -sP يقوم بعمل ping scan فقط
    result = run_command(command)
    log_message(f"نتائج جمع معلومات IP:\n{result}")
    return result

def perform_brute_force(target, username_file, password_file, service):
    """
    يقوم بتنفيذ هجوم brute force باستخدام hydra.
    """
    log_message(f"بدء هجوم Brute Force على {target} للخدمة {service}")
    command = [HYDRA_PATH, "-L", username_file, "-P", password_file, f"{target}", service]
    result = run_command(command)
    log_message(f"نتائج هجوم Brute Force:\n{result}")
    return result


